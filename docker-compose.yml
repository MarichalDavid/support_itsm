version: '3.8'

services:
  # Reverse proxy Traefik
  traefik:
    image: traefik:v2.10
    container_name: support-platform-traefik
    command:
      - "--api.dashboard=true"
      - "--api.insecure=true"
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      - "--entrypoints.web.address=:80"
    ports:
      - "80:80"
      - "8081:8080"  # Change le dashboard Traefik sur 8081
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    networks:
      - support-network
    restart: unless-stopped

  # Base de données PostgreSQL pour Keycloak
  keycloak-db:
    image: postgres:15
    container_name: support-platform-keycloak-db
    environment:
      POSTGRES_DB: keycloak
      POSTGRES_USER: keycloak
      POSTGRES_PASSWORD: keycloak_password
    volumes:
      - keycloak-db-data:/var/lib/postgresql/data
    networks:
      - support-network
    restart: unless-stopped

  # Serveur Keycloak
  keycloak:
    image: quay.io/keycloak/keycloak:22.0
    container_name: support-platform-keycloak
    command:
      - "start-dev"
      - "--import-realm"
    environment:
      KC_DB: postgres
      KC_DB_URL: jdbc:postgresql://keycloak-db:5432/keycloak
      KC_DB_USERNAME: keycloak
      KC_DB_PASSWORD: keycloak_password
      KEYCLOAK_ADMIN: admin
      KEYCLOAK_ADMIN_PASSWORD: admin
      KC_HOSTNAME_STRICT: false
      KC_HTTP_ENABLED: true
      KC_PROXY: edge  # Gère le reverse proxy
    depends_on:
      - keycloak-db
      - traefik
    volumes:
      - ./keycloak/realms:/opt/keycloak/data/import
    networks:
      - support-network
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.keycloak.rule=Host(`keycloak.localhost`)"
      - "traefik.http.routers.keycloak.entrypoints=web"
      - "traefik.http.services.keycloak.loadbalancer.server.port=8080"
    restart: unless-stopped

  # Service Frontend
  frontend-service:
    build:
      context: ./services/frontend-service
      dockerfile: Dockerfile
    container_name: support-platform-frontend
    depends_on:
      - keycloak
    environment:
      - VITE_KEYCLOAK_URL=http://keycloak.localhost/  # Correction ici
      - VITE_KEYCLOAK_REALM=support-platform
      - VITE_KEYCLOAK_CLIENT_ID=support-platform-client 
    networks:
      - support-network
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.frontend.rule=Host(`frontend.localhost`)"
      - "traefik.http.routers.frontend.entrypoints=web"
      - "traefik.http.services.frontend.loadbalancer.server.port=80" # Correction ici
    volumes:
      - frontend-node-modules:/app/node_modules  # Évite la réinstallation des dépendances
    restart: unless-stopped

  # Base de données pour GLPI
  glpi-db:
    image: mariadb:10.7
    container_name: support-platform-glpi-db
    environment:
      MYSQL_ROOT_PASSWORD: glpi_root_password
      MYSQL_DATABASE: glpi
      MYSQL_USER: glpi
      MYSQL_PASSWORD: glpi_password
    volumes:
      - glpi-db-data:/var/lib/mysql
    networks:
      - support-network
    restart: unless-stopped

  # Service GLPI
  glpi:
    build:
      context: ./services/glpi
      dockerfile: Dockerfile
    container_name: support-platform-glpi
    environment:
      - TIMEZONE=Europe/Paris
      - MARIADB_HOST=glpi-db
      - MARIADB_PORT=3306
      - MARIADB_DATABASE=glpi
      - MARIADB_USER=glpi
      - MARIADB_PASSWORD=glpi_password
    volumes:
      - glpi-data:/var/www/html/glpi
      - glpi-config:/var/www/html/glpi/config
      - glpi-plugins:/var/www/html/glpi/plugins
      - glpi-files:/var/www/html/glpi/files
    depends_on:
      - glpi-db
      - traefik
    networks:
      - support-network
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.glpi.rule=Host(`glpi.localhost`)"
      - "traefik.http.routers.glpi.entrypoints=web"
      - "traefik.http.services.glpi.loadbalancer.server.port=80"
    restart: unless-stopped


# Volumes pour la persistance des données
volumes:
  keycloak-db-data:
  frontend-node-modules:
  glpi-db-data:
  glpi-data:
  glpi-config:
  glpi-plugins:
  glpi-files:

# Configuration du réseau
networks:
  support-network:
    driver: bridge